plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    namespace 'ca.arnaud.hopsboilingtimer'
    compileSdk 34

    defaultConfig {
        applicationId "ca.arnaud.hopsboilingtimer"
        minSdk 28
        targetSdk 34
        versionCode 6
        versionName "1.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'

        freeCompilerArgs += [
                '-opt-in=androidx.compose.animation.ExperimentalAnimationApi',
                '-opt-in=androidx.compose.foundation.ExperimentalFoundationApi',
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Android
    implementation libs.bundles.android
    coreLibraryDesugaring libs.android.coreLibraryDesugaring

    // Google Accompanist
    implementation libs.accompanist.permissions

    // DI
    implementation libs.dagger.hilt
    kapt libs.dagger.hiltCompiler
    implementation libs.android.hiltWork
    kapt libs.android.hiltCompiler

    // Compose + Material
    implementation platform(libs.compose.bom)
    implementation libs.bundles.compose
    debugImplementation libs.compose.tooling

    // Room
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    kapt libs.room.compiler

    // Test
    testImplementation libs.bundles.test
}